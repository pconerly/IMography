# Create your views here.
import datetime
from django.http import HttpResponse, HttpResponseRedirect
from django.shortcuts import render_to_response
from django.template import RequestContext, loader
from django import forms
import os
try:
    from hashlib import md5
except ImportError:
    from md5 import md5
from myproject.upload.models import AimLog


class UploadFileForm(forms.Form):
    #title = forms.CharField(max_length=50)
    file = forms.FileField()

def index(request):
    t = loader.get_template('index.html')
    c = RequestContext(request, {'foo': 'bar'})
    r = t.render(c)
    return HttpResponse(r)

def upload_file(request):
    if request.method == 'POST':
        form = UploadFileForm(request.POST, request.FILES)
        if form.is_valid():
            hash = temp_process(request.FILES['file'])
            #handle_uploaded_file(request.FILES['file'])
            url = '/data/' + hash + '/'
            return HttpResponseRedirect(url) #change this to '/data/#hash' later
    else:
        form = UploadFileForm()
    return render_to_response('upload.html', {'form':form}, 
                              context_instance=RequestContext(request))

def temp_process(logfile):
    data = logfile.read()
    #process data!

    #do hashing
    m = md5()
    m.update(data)
    projectpath = os.path.abspath(os.path.split(__file__)[0])
    path = os.path.join(projectpath, 'media', m.hexdigest() + '.txt')
    fout = open(path, 'w')
    fout.write(data)
    fout.close()
    return m.hexdigest()

def handle_uploaded_file(file):
    pass
    return None

def data(request, hash):
    projectpath = os.path.abspath(os.path.split(__file__)[0])
    path = os.path.join(projectpath, 'media', str(hash) + '.txt')
    if os.path.isfile(path):
        fin = open(path, 'r')
        data = fin.read()
        fin.close()
        html = "<html><body>Here is the file's data!<p>%s</p></body></html>" % data
        return HttpResponse(html)
    else:
        return HttpResponse('invalid hash')
        #return render_to_response('invalid.html')

def data_missing(request): #, badhash):
    return HttpResponse('your hash was invalid') # % badhash)

def hello(request):
    return HttpResponse("Hello world")

def success(request):
    now = datetime.datetime.now()
    html = "<html><body>It is now %s.</body></html>" % now
    return HttpResponse(html)

